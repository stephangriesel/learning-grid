/* MDN doc: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout */

.wrapper {
    background:#777;
    display:grid; 
    
    /* We create a grid container by declaring display: grid or display: inline-grid on an element. As soon as we do this all direct children of that element will become grid items. */
    
    grid-template-columns: 1fr 1fr 1fr; 
    
    /* We define rows and columns on our grid with the grid-template-columns and grid-template-rows properties. These define grid tracks. A grid track is the space between any two lines on the grid. In the below image you can see a track highlighter â€“ the first row track in our grid. */
    
    /* ### fr unit ###
    /* Tracks can be defined using any length unit. Grid also introduces an additional length unit to help us create flexible grid tracks. The new fr unit represents a fraction of the available space in the grid container.  */
    
    grid-auto-rows:minmax(100px,auto)
    
    /* ### grid-auto-rows ###
    /* When creating our example grid we defined our column tracks with the grid-template-columns property, but let grid create rows as needed for the content. These rows are created in the implicit grid. The explicit grid consists of the rows and columns you define with grid-template-columns and grid-template-rows. If you place something outside of that defined grid, or due to the amount of content more grid tracks are needed, then grid creates rows and columns in the implicit grid. These tracks will be auto-sized by default, so will size based on the content inside them.
    You can also define a set size for tracks created in the implicit grid with the grid-auto-rows and grid-auto-columns properties.
    In the below example we use grid-auto-rows to ensure that tracks created in the implicit grid are 200 pixels tall.*/
    
    /* ### minmax() ####
    /* When setting up an explicit grid or defining the sizing for automatically created rows or columns we may want to give tracks a minimum size, but ensure they expand to fit any content that is added. For example, I may want my rows to never collapse smaller than 100 pixels, but if my content stretches to 300 pixels in height I would like the row to stretch to that height.
    
    Grid has a solution for this with the minmax() function. In this next example I am using minmax()in the value of grid-auto-rows. Automatically created rows will be a minimum of 100 pixels tall, and a maximum of auto. Using auto means that the size will look at the content size and so stretch to give space for the tallest thing in a cell in this row. */


}